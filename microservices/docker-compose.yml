
version: '3'
networks:
  service_network:
    name: service_compose_network

services:
  internal_weather_service_b:
    build:
      context: ./internalWeatherServiceB
      dockerfile: Dockerfile
    container_name: internal_weather_service_b
    ports:
      - "8900:8900"
    env_file:
      - ./internalWeatherServiceB/.env
    networks:
      - service_network
    depends_on:
      - postgres_service
      - redis_service
      - mongodb_service

  external_service_a:
    build:
      context: ./externalServiceA
      dockerfile: Dockerfile
    container_name: external_service_a
    ports:
      - "9900:9900"
    env_file:
      - ./externalServiceA/.env
    networks:
      - service_network

  kong_gateway_1:
    image: kong:latest
    container_name: kong_gateway_1
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
    volumes:
      - .././kongApiGateway/kong.yml:/kong/declarative/kong.yml
    ports:
      - "8000:8000"
      - "8001:8001"
    networks:
      - service_network
#    depends_on: ## seems to be causing cyclic dependency causing issues
#      - internal_weather_service_b
#      - external_service_a

  kong_gateway_2:
    image: kong:latest
    container_name: kong_gateway_2
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
    volumes:
      - .././kongApiGateway/kong.yml:/kong/declarative/kong.yml
    ports:
      - "8002:8000"
      - "8003:8001"
    networks:
      - service_network
#    depends_on:
#      - internal_weather_service_b
#      - external_service_a

  nginx_load_balancer:
    image: nginx:latest
    container_name: nginx_load_balancer
    volumes:
      - .././nginxLoadBalancer/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "6000:6000"
    networks:
      - service_network
    depends_on:
      - kong_gateway_1
      - kong_gateway_2

  postgres_service:
    image: postgres:13
    container_name: postgres_service
    environment:
      POSTGRES_USER: postgres_user_suraj
      POSTGRES_PASSWORD: postgres_pws_1234
      POSTGRES_DB: weatherdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - service_network

  redis_service:
    image: redis:6
    container_name: redis_service
    ports:
      - "6379:6379"
    networks:
      - service_network

  mongodb_service:
    image: mongo:4.4
    container_name: mongodb_service
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_user_suraj
      MONGO_INITDB_ROOT_PASSWORD: mongo_pws_1234
    ports:
      - "27017:27017"
    networks:
      - service_network

volumes:
  pgdata:
  redisdata:
