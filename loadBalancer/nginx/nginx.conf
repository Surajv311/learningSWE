worker_processes 1;

events {
    worker_connections 1024;
}

http {
    upstream krakend {
        server krakend_1:8080;  # First KrakenD instance
        server krakend_2:8080;  # Second KrakenD instance
    }
    include       mime.types;
    proxy_read_timeout 60s;
    proxy_connect_timeout 60s;

    server {
        # listen 6000;  # Port on which Nginx is running getting Failed to load resource: net::ERR_UNSAFE_PORT in Chrome so changing port
        listen 8765;
        location / {

        # Enable CORS
            add_header 'Access-Control-Allow-Origin' 'http://localhost:3000';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true';

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'http://localhost:3000';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
                add_header 'Access-Control-Max-Age' 86400;  # Cache preflight response for 1 day
                return 204;  # No content response
            }

            proxy_pass http://krakend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}